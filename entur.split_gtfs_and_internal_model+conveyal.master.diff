diff --cc src/main/java/org/opentripplanner/routing/graph/GraphIndex.java
index 7d960399a,6a79f028a..000000000
--- a/src/main/java/org/opentripplanner/routing/graph/GraphIndex.java
+++ b/src/main/java/org/opentripplanner/routing/graph/GraphIndex.java
@@@ -554,19 -554,8 +554,22 @@@ public class GraphIndex 
      }
  
      /**
-      * Stop clusters can be built in one of two ways, either by geographical proximity, or 
+      * Stop clusters can be built in one of two ways, either by geographical proximity and name, or
       * according to a parent/child station topology, if it exists.
++<<<<<<< HEAD
 +     * 
 +     * Some challenges faced by DC and Trimet:
 +     * FIXME OBA parentStation field is a string, not an FeedId, so it has no agency/feed scope
 +     * But the DC regional graph has no parent stations pre-defined, so no use dealing with them for now.
 +     * However Trimet stops have "landmark" or Transit Center parent stations, so we don't use the parent stop field.
 +     *
 +     * We can't use a similarity comparison, we need exact matches. This is because many street names differ by only
 +     * one letter or number, e.g. 34th and 35th or Avenue A and Avenue B.
 +     * Therefore normalizing the names before the comparison is essential.
 +     * The agency must provide either parent station information or a well thought out stop naming scheme to cluster
 +     * stops -- no guessing is reasonable without that information.
++=======
++>>>>>>> origin/master
       */
      public void clusterStops() {
      	if (graph.stopClusterMode != null) {
